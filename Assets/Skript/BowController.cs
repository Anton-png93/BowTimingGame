using UnityEngine;

public class BowController : MonoBehaviour
{
    public GameObject arrowPrefab;
    public Transform shootPoint;
    public AudioSource bowShotSound;
    public GameObject arrowReady;

    private float arrowSpeed = 40f;

    // üëâ –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ–¥–≤–∏–∂–µ–Ω–∏—è –ª—É–∫–∞:
    private float autoMoveSpeed = 0f;       // —Ç–µ–∫—É—â–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –∞–≤—Ç–æ–¥–≤–∏–∂–µ–Ω–∏—è
    private float autoMoveAmplitude = 2f;   // –∞–º–ø–ª–∏—Ç—É–¥–∞ –∫–æ–ª–µ–±–∞–Ω–∏–π (—Ä–∞–∑–º–∞—Ö –≤–ª–µ–≤–æ-–≤–ø—Ä–∞–≤–æ)
    private Vector3 startPosition;          // –∏—Å—Ö–æ–¥–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –ª—É–∫–∞
    private bool isAutoMoving = false;      // –≤–∫–ª—é—á–µ–Ω–æ –ª–∏ –∞–≤—Ç–æ–¥–≤–∏–∂–µ–Ω–∏–µ

    void Start()
    {
        startPosition = transform.position; // ‚úÖ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é –ª—É–∫–∞
        arrowReady.SetActive(true);         // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–µ–ª—É –Ω–∞ –ª—É–∫–µ
    }

    void Update()
    {
       // –í—ã—Å—Ç—Ä–µ–ª –ø–æ –ø—Ä–æ–±–µ–ª—É (–ü–ö) –∏ –ø–æ –∫–∞—Å–∞–Ω–∏—é (–º–æ–±–∏–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞)
if ((Input.GetKeyDown(KeyCode.Space) || 
    (Input.touchCount > 0 && Input.GetTouch(0).phase == TouchPhase.Began)) 
    && !bowShotSound.isPlaying)
{
    ShootArrow();
}

        // üëâ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–µ–ª–∫–∞–º–∏ –Ω–∞ –ü–ö –¥–ª—è —Ç–µ—Å—Ç–∞:
        float moveX = Input.GetAxisRaw("Horizontal");
        if (moveX != 0)
        {
            transform.position += new Vector3(moveX, 0, 0) * Time.deltaTime * 5f;
        }

        // üëâ –í–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–¥–≤–∏–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ 50 –æ—á–∫–æ–≤:
        if (GameManager.instance.GetScore() >= 50)
        {
            isAutoMoving = true;

            // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –∫–∞–∂–¥—ã–µ 10 –æ—á–∫–æ–≤
            int bonusSpeed = (GameManager.instance.GetScore() - 50) / 10;
            autoMoveSpeed = 1.5f + bonusSpeed * 0.5f; // –Ω–∞—á–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å 0.5, —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è
        }

        // üëâ –í—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ–¥–≤–∏–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –∞–∫—Ç–∏–≤–Ω–æ
        if (isAutoMoving)
        {
            float offset = Mathf.PingPong(Time.time * autoMoveSpeed, autoMoveAmplitude * 2) - autoMoveAmplitude;
            transform.position = new Vector3(startPosition.x + offset, startPosition.y, startPosition.z);
        }
    }

    void ShootArrow()
    {
        bowShotSound.Play();
        arrowReady.SetActive(false);

        GameObject arrow = Instantiate(arrowPrefab, shootPoint.position, Quaternion.identity);
        Rigidbody2D rb = arrow.GetComponent<Rigidbody2D>();
        rb.linearVelocity = Vector2.up * arrowSpeed;

        Debug.Log("–°—Ç—Ä–µ–ª–∞ –≤—ã–ª–µ—Ç–µ–ª–∞!");
        Invoke(nameof(ShowArrowOnBow), 1f);
    }

    void ShowArrowOnBow()
    {
        arrowReady.SetActive(true);
    }
}
